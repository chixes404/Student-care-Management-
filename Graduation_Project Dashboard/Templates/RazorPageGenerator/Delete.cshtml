@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@page
@@model @Model.NamespaceName.@Model.PageModelClassName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.RazorPageName";
    @:ViewData["Entity"] = "@(Model.ModelMetadata.EntitySetName)";
    @:ViewData["BreadCrumb"] = "<a href='/@(Model.ModelMetadata.EntitySetName)' class='breadcrumb-item'>@(Model.ModelMetadata.EntitySetName)</a>";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
//@:<h1>@Model.RazorPageName</h1>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.RazorPageName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}

<div class="card">
    <div class="card-header">
        <h5 class="card-title mb-0">Are you sure you want to delete this?</h5>
    </div>
    <div class="card-body">
        <div class="row">
        @{
            Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
            Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);

             <div class="col-lg-12">
                <fieldset>
                    <div class="form-group row col-form-label">
                        <label class="col-lg-2  fw-bold">
                            @@Html.DisplayNameFor(model => model.@(Model.ModelTypeName).Id)
                        </label>
                        <div class="col-lg-10">
                            @@Html.DisplayFor(model => model.@(Model.ModelTypeName).Id)
                        </div>
                    </div>
                </fieldset>
             </div>

            foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
            {
                if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                    && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
                {
                   <div class="col-lg-6">
                        <fieldset>
                            <div class="form-group row col-form-label">
                                <label class="col-lg-4  fw-bold">
                                    @@Html.DisplayNameFor(model => model.@(Model.ModelTypeName).@GetValueExpression(property))
                                </label>
                                <div class="col-lg-8">
                                    @@Html.DisplayFor(model => model.@(Model.ModelTypeName).@GetValueExpression(property))
                                </div>
                             </div>
                        </fieldset>
                    </div>
                }
                else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
                {
                    <div class="col-lg-6">
                        <fieldset>
                            <div class="form-group row col-form-label">
                                <label class="col-lg-4  fw-bold">
                                    @@Html.DisplayNameFor(model => model.@(Model.ModelTypeName).@GetValueExpression(navigation))
                                </label>
                                <div class="col-lg-8">
                                    @@Html.DisplayFor(model => model.@(Model.ModelTypeName).@GetValueExpression(navigation).@navigation.DisplayPropertyName)
                                </div>
                            </div>
                        </fieldset>
                    </div>
                }
            }
        @:</div>
    @:</div>
    @:
     @:<form method="post">
    @:<div class="card-footer d-flex justify-content-between align-items-center bg-light border-top-0">
            foreach (var property in Model.ModelMetadata.Properties)
            {
                if(property.IsPrimaryKey){
                    @:<input type="hidden" asp-for="@(Model.ModelTypeName).@GetValueExpression(property)" />
                }
            }
            @:<a asp-page="./Index" class="btn btn-primary btn-labeled btn-labeled-start">
            @:    Cancel
            @:    <span class="btn-labeled-icon bg-black bg-opacity-20">
            @:        <i class="icon-arrow-left8"></i>
            @:    </span>
            @:</a>
            @:<button type="submit" class="btn btn-danger btn-labeled btn-labeled-end">
            @:    Delete
            @:    <span class="btn-labeled-icon bg-black bg-opacity-20">
            @:        <i class="icon-bin"></i>
            @:    </span>
            @:</button>
    @:</div>
    @:</form>
@:</div>

    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}
