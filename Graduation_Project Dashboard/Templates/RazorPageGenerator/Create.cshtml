@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@page
@@model @Model.NamespaceName.@Model.PageModelClassName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.RazorPageName";
    @:ViewData["Entity"] = "@(Model.ModelMetadata.EntitySetName)";
    @:ViewData["BreadCrumb"] = "<a href='/@(Model.ModelMetadata.EntitySetName)' class='breadcrumb-item'>@(Model.ModelMetadata.EntitySetName)</a>";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}

    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.RazorPageName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
//@:<h4>@Model.ViewDataTypeShortName</h4>


        @:<form method="post">
             @:<div class="card">
                @:<div class="card-header">
                    @:<h5 class="card-title mb-0">Create New @Model.ViewDataTypeShortName</h5>
                @:</div>

                @:<div class="card-body">
                    @:<div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    @:<div class="row">
                    foreach (var property in Model.ModelMetadata.Properties)
                    {
                        if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly)
                        {
                            if (property.IsForeignKey)
                            {
                                @:<div class="col-lg-6">
                                    @:<div class="form-group">
                                        @:<label asp-for="@(Model.ModelTypeName).@property.PropertyName" class="control-label"></label>
                                        @:<select asp-for="@(Model.ModelTypeName).@property.PropertyName" class ="form-control" asp-items="ViewBag.@property.PropertyName"></select>
                                    @:</div>
                                @:</div>
                                continue;
                            }

                            bool isCheckbox = property.TypeName.Equals("System.Boolean");
                            if (isCheckbox)
                            {
                                @:<div class="col-lg-6">
                                    @:<div class="form-group mt-3">
                                        @:<label class="form-check-label">
                                            @:<input class="form-check-input" asp-for="@(Model.ModelTypeName).@property.PropertyName" /> @@Html.DisplayNameFor(model => model.@(Model.ModelTypeName).@GetValueExpression(property))
                                        @:</label>
                                    @:</div>
                                @:</div>
                            }
                            else if (property.IsEnum && !property.IsEnumFlags)
                            {
                                @:<div class="col-lg-6">
                                    @:<div class="form-group">
                                        @:<label asp-for="@(Model.ModelTypeName).@property.PropertyName" class="control-label"></label>
                                        @:<select asp-for="@(Model.ModelTypeName).@property.PropertyName" class="form-control"></select>
                                        @:<span asp-validation-for="@(Model.ModelTypeName).@property.PropertyName" class="text-danger"></span>
                                    @:</div>
                                @:</div>
                            }
                            else if (property.IsMultilineText)
                            {
                                @:<div class="col-lg-6">
                                    @:<div class="form-group">
                                        @:<label asp-for="@(Model.ModelTypeName).@property.PropertyName" class="control-label"></label>
                                        @:<textarea asp-for="@(Model.ModelTypeName).@property.PropertyName" class="form-control"></textarea>
                                        @:<span asp-validation-for="@(Model.ModelTypeName).@property.PropertyName" class="text-danger"></span>
                                    @:</div>
                                @:</div>
                            }
                            else
                            {
                                @:<div class="col-lg-6">
                                    @:<div class="form-group">
                                        @:<label asp-for="@(Model.ModelTypeName).@property.PropertyName" class="control-label"></label>
                                        @:<input asp-for="@(Model.ModelTypeName).@property.PropertyName" class="form-control" />
                                        @:<span asp-validation-for="@(Model.ModelTypeName).@property.PropertyName" class="text-danger"></span>
                                    @:</div>
                                @:</div>
                            }
                        }
                    }
                    @:</div>
                }
                </div>
                <div class="card-footer d-flex justify-content-between align-items-center bg-light border-top-0">
                    <a asp-page="Index" class="btn btn-primary btn-labeled btn-labeled-start">
                        Cancel
                        <span class="btn-labeled-icon bg-black bg-opacity-20">
                            <i class="icon-arrow-left8"></i>
                        </span>
                    </a>
                    <button type="submit" class="btn btn-primary btn-labeled btn-labeled-end">
                        Create
                        <span class="btn-labeled-icon bg-black bg-opacity-20">
                            <i class="icon-paperplane"></i>
                        </span>
                    </button>
                </div>

             </div>
        </form>

@{
    if (Model.ReferenceScriptLibraries)
    {
@:@@section Scripts {
    @:@@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
@:}
    }
    // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</body>
@:</html>
    }
}
@functions
{
    // Do we need to use this in conjunction with the PrimaryKey check?
    bool IsPropertyGuid(IPropertyMetadata property)
    {
        return string.Equals("System.Guid", property.TypeName, StringComparison.OrdinalIgnoreCase);
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }
}
